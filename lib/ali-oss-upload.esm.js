import e from"ali-oss";
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function t(e,t,n,o){return new(n||(n=Promise))((function(s,i){function r(e){try{a(o.next(e))}catch(e){i(e)}}function c(e){try{a(o.throw(e))}catch(e){i(e)}}function a(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,c)}a((o=o.apply(e,t||[])).next())}))}const n="ASYNC_GET_STSTOKEN_NO_FUNCTION",o="STSTOKEN_NOT_SUPPLY";var s;!function(e){e.zh="zh",e.en="en"}(s||(s={}));var i={[s.zh]:{[n]:"asyncGetStsToken应该是一个异步函数，并且返回stsToken对象,且对象至少包括accessKeyId和accessKeySecret字段，同时最好提供securityToken从而进行临时访问😊",[o]:"上传文件需要权限认证信息，需在实例化AliOssUpload时提供全局异步方法asyncGetStsToken，或在调用upload方法时主动传入异步方法asyncGetStsToken😊"},[s.en]:{[n]:"asyncGetStsToken should be an asynchronous function and return stsToken object, and the object includes at least accessKeyId and accessKeySecret fields, and it is better to provide securityToken for temporary access.😊",[o]:"Uploading files requires permission authentication information. You need to provide the global asynchronous method asyncGetStsToken when instantiating AliOssUpload, or actively pass in the asynchronous method asyncGetStsToken when calling the upload method.😊"}};class r{constructor(r){this.getConfig=e=>t(this,void 0,void 0,(function*(){const{asyncGetStsToken:t,bucket:s,region:r}=e;if(!t&&!this.asyncGetStsToken)throw new Error(i[this.language][o]);if(t&&"function"!=typeof t)throw new TypeError(i[this.language][n]);if(!t&&this.asyncGetStsToken&&"function"!=typeof this.asyncGetStsToken)throw new TypeError(i[this.language][n]);try{const e=t?yield t():yield this.asyncGetStsToken();return this.getOssConfig({stsToken:e,bucket:s,region:r})}catch(e){console.log(e.message)}})),this.initOssClient=n=>t(this,void 0,void 0,(function*(){try{const{asyncGetStsToken:t,bucket:o=this.bucket,region:s=this.region}=n,i=yield this.getConfig({asyncGetStsToken:t,bucket:o,region:s});return new e(i)}catch(e){console.error(e.message)}})),this.upload=n=>t(this,void 0,void 0,(function*(){const{directory:t,asyncGetStsToken:o,file:s,extraUploadOptions:i,randomName:r=!1,bucket:c=this.bucket,region:a=this.region}=n;try{const n=yield this.getConfig({asyncGetStsToken:o,bucket:c,region:a}),{name:l}=s,u=new e(n),h=null!=i?i:this.defaultUploadOption,y=this.getConstructOssKey({name:l,directory:t,randomName:r}),d=yield u.multipartUpload(y,s,h);return this.domain?Object.assign({ossSrc:`${this.domain}${d.name}`},d):d}catch(e){console.error(e.message)}})),this.batchUpload=e=>t(this,void 0,void 0,(function*(){let{files:t}=e,n=function(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(o=Object.getOwnPropertySymbols(e);s<o.length;s++)t.indexOf(o[s])<0&&Object.prototype.propertyIsEnumerable.call(e,o[s])&&(n[o[s]]=e[o[s]])}return n}(e,["files"]);t=[...t];try{const e=[];for(let o=0;o<t.length;o++)e.push(this.upload(Object.assign(Object.assign({},n),{file:t[o]})));return yield Promise.all(e)}catch(e){console.log(e.message)}}));const{bucket:c,domain:a,region:l,directory:u="",extraUploadOptions:h={},asyncGetStsToken:y,log:d=!1,language:g=s.zh}=r;this.bucket=c,this.domain=a,this.directory=u,this.region=l,this.defaultUploadOption=h,this.asyncGetStsToken=y,this.log=d,this.language=g}handelDirectory(e){return""===e||"/"===e?"":e.replace(/^\/+|\/+$/g,"")+"/"}getConstructOssKey(e){const{directory:t=this.directory}=e,{name:n,randomName:o}=e,s=this.handelDirectory(t),i=n.split(".")[1];return o?"string"==typeof o?`${s}${o}.${i}`:`${s}${this.getUuid()}.${i}`:`${s}${n}`}getUuid(){return"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g,(e=>{const t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)}))}getOssConfig(e){const{stsToken:t,region:n,bucket:o}=e,{accessKeyId:s,accessKeySecret:i,securityToken:r}=t;return{secure:!0,region:n,accessKeyId:s,accessKeySecret:i,stsToken:r,bucket:o}}}export{r as default};"undefined"!=typeof window&&(window._ALI_OSS_UPLOAD_VERSION_="1.0.3");
